apiVersion: v1
kind: Pod
metadata:
  name: test-pod
spec:
  # affinity:
  #   nodeAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: nvidia.com/gpu.product
  #           operator: In
  #           values:
  #           - NVIDIA-RTX-A6000
  containers:
  - name: t-pod
    image: ubuntu
    volumeMounts:
    - mountPath: /project
      name: project
    resources:
      limits:
        memory: 32Gi
        cpu: "1"
        # nvidia.com/a100: 2
      requests:
        memory: 32Gi
        cpu: "1"
        # nvidia.com/a100: 2
    command: 
      - "sh"
      - "-c"
      - |
        apt update && \
        apt install -y tar wget build-essential zlib1g-dev libncurses5-dev libncursesw5-dev libreadline-dev libsqlite3-dev libgdbm-dev libdb5.3-dev libbz2-dev libexpat1-dev liblzma-dev libffi-dev tk-dev software-properties-common libssl-dev && \
        apt -y upgrade && \
        wget https://www.python.org/ftp/python/3.7.11/Python-3.7.11.tgz && \
        tar -xf Python-3.7.11.tgz && \
        cd Python-3.7.11 && \
        ./configure --enable-optimizations --with-ssl && \
        make -j $(nproc) && \
        make altinstall && \
        rm -rf /usr/lib/python3.12/EXTERNALLY-MANAGED && \
        # apt -y install update-alternatives && \
        update-alternatives --install /usr/bin/python python /usr/local/bin/python3.7 1 && \
        update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.7 1 && \
        export PATH=$PATH:/usr/local/bin && \
        cd /project/OpenCOOD && \
        pip3.7 install -r requirements.txt && \
        pip3.7 uninstall -y setuptools && \
        pip3.7 install setuptools && \
        python3.7 setup.py develop && \
        pip3.7 install spconv-cu113 && \
        # python3.7 opencood/utils/setup.py build_ext --inplace && \
        # apt install -y libgl1-mesa-dri && \
        # apt install -y libgl1 && \
        # #### Upto this point, it worked from interactive terminal and executed code at least upto the point of searching for training data. 

        #### TODO: [] Send dataset to the pod.
        #### TODO: [] Run training code with opencood
        #### TODO: [] Upload my code to a github repository and clone it here.
        #### TODO: [] Run training code with my code.

        # wget https://bootstrap.pypa.io/pip/3.7/get-pip.py && \
        # python3.7 get-pip.py && \

        # update-alternatives --config python && \
        # update-alternatives --config python3 && \
        # python --version && \
        # python3 --version && \
        # apt update && \
        # apt install -y python3 python3-pip && \
        # rm -rf /usr/lib/python3.12/EXTERNALLY-MANAGED && \
        # apt-get install -y git && \
        # git clone https://github.com/DerrickXuNu/OpenCOOD.git && \
        # # apt-get install wget && \
        # # mkdir -p ~/miniconda3 && \
        # # wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh && \
        # # bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3 && \
        # # rm -rf ~/miniconda3/miniconda.sh && \
        # # export PATH="$HOME/miniconda3/bin:$PATH" && \
        # # #
        # cd /project/OpenCOOD && \
        # # # conda env create -f environment.yml && \
        # # # conda init && \
        # # # source ~/.bashrc && \
        # # # conda activate opencood && \
        # # pip install -r requirements.txt && \
        # # pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118 && \
        # # pip install spconv-cu113 && \
        # # python opencood/utils/setup.py build_ext --inplace && \
        # # python setup.py develop && \
        # # apt-get update && apt-get install -y libgl1 && \
        
        ## ------------
        ## TODO : Need to allocate GPU and test training code as is. Then git clone my code and run training. 
        #
        # pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118 && \
        # pip3 install timm==0.9.7 && \
        # pip3 install easydict==1.10 && \
        # pip3 install datasets && \
        # pip3 install termcolor && \
        # pip3 install tensorboardX && \
        # pip3 install -U "huggingface_hub[cli]" && \
        # huggingface-cli login --token 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 && \
        # echo '===========installation successful==========' && \
        # mkdir -p /opt/repo/multi-region-attention && \
        # git clone --single-branch --branch conv-feature-merge https://github.com/mahfuzalhasan/multi-region-attention /opt/repo/multi-region-attention && \
        # apt update && \
        # echo 'git pulled successfully.' && \
        # cd /opt/repo/multi-region-attention && \
        # torchrun --standalone --nproc_per_node=2 validation_only_local.py imagenet --devices 2 --batchsize 16 && \
        echo '===========Commands executed successfully.==========' && \
        sleep 9000
  volumes:
    - name: project
      persistentVolumeClaim:
        claimName: cooppercpvc
  restartPolicy: Never